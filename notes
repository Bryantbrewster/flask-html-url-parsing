from flask import Flask

app = Flask(__name__)


def make_bold(function):
    def wrapper():
        return "<strong>" + function() + "</strong>"
    return wrapper

def make_emphasis(function):
    def wrapper():
        return "<em>" + function() + "</em>"
    return wrapper

def make_underlined(function):
    def wrapper():
        return "<u>" + function() + "</u>"
    return wrapper


@app.route("/")
def hello_world():
    return '<h1 style="text-align: center">Hello, World!</h1>' \
           '<p>This is a paragraph.</p>' \
           '<img src="https://media.giphy.com/media/n5CHDD8c4sW18Dqz3z/giphy.gif">'


# '<img src="/static/images/Juvenile_Ragdoll.jpg" width=200>'


@app.route("/bye")
@make_bold
@make_emphasis
@make_underlined
def bye():
    return "Bye!"


@app.route("/username/<name>/<int:number>")
def greet(name, number):
    return f"Hello there {name}! You are {number} years old!"


if __name__ == "__main__":
    app.run(debug=True)



####################
I can use variables in decorators to create dynamic URLs. If I have @app.route("/username/<name>"), whatever the user types in where <name> goes, it will feed that input into the greet() function as the "name" value.
The same thing with <int:number> but the "int" part of the code forces the input to be an integer.
If I have multiple decorators on a function, make sure that the route decorator goes first!!!!
Make sure that the if __name__ == "__main__" code goes at the very end!!